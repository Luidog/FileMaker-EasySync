#
# Convert to a full Operating System path, for the current OS.
#
#
Set Variable [ $path; Value:Trim ( Get ( ScriptParameter ) ) ]
#
#
# FileMaker Network path cannot be converted to OS path
If [ Left ( $path ; 7 ) = "fmnet:/" ]
Exit Script [ Result: "?" ]
End If
#
#
# normalize path
Perform Script [ “~Path: Normalize ( fullPath )”; Parameter: $path ]
Set Variable [ $path; Value:Get ( ScriptResult ) ]
#
#
#adjust for Windows
If [ Get ( SystemPlatform ) = -2  /* Windows */ ]
If [ /* not a network path */Left ( $path ; 2 ) ≠ "//" ]
# remove leading forward slash
Set Variable [ $path; Value:Right ( $path ; Length ( $path ) - 1 ) ]
End If
# use backslash path separator
Set Variable [ $path; Value:Substitute ( $path ; "/" ; "\\" ) ]
End If
#
#
Exit Script [ Result: $path ]
#


---
Script:
  includeInMenu: 'False'
  runFullAccess: 'True'
  id: '21'
  name: '~Path: OS ( fullPath )'
  StepList:
    Step:
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '# Convert to a full Operating System path, for the current OS.'
      Text: ' Convert to a full Operating System path, for the current OS.'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $path; Value:Trim ( Get ( ScriptParameter ) ) ]
      Value:
        Calculation: Trim ( Get ( ScriptParameter ) )
        DisplayCalculation:
          Chunk:
          - Trim
          - ' ( '
          - Get
          - ' ( '
          - ScriptParameter
          - ' ) )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $path
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '# FileMaker Network path cannot be converted to OS path'
      Text: ' FileMaker Network path cannot be converted to OS path'
    - enable: 'True'
      id: '68'
      name: If
      StepText: If [ Left ( $path ; 7 ) = "fmnet:/" ]
      Calculation: Left ( $path ; 7 ) = "fmnet:/"
      DisplayCalculation:
        Chunk:
        - Left
        - ' ( $path ; 7 ) = "fmnet:/"'
    - enable: 'True'
      id: '103'
      name: Exit Script
      StepText: 'Exit Script [ Result: "?" ]'
      Calculation: '"?"'
      DisplayCalculation:
        Chunk: '"?"'
    - enable: 'True'
      id: '70'
      name: End If
      StepText: End If
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '# normalize path'
      Text: ' normalize path'
    - enable: 'True'
      id: '1'
      name: Perform Script
      StepText: 'Perform Script [ “~Path: Normalize ( fullPath )”; Parameter: $path
        ]'
      Calculation: $path
      DisplayCalculation:
        Chunk: $path
      Script:
        id: '19'
        name: '~Path: Normalize ( fullPath )'
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $path; Value:Get ( ScriptResult ) ]
      Value:
        Calculation: Get ( ScriptResult )
        DisplayCalculation:
          Chunk:
          - Get
          - ' ( '
          - ScriptResult
          - ' )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $path
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#adjust for Windows'
      Text: adjust for Windows
    - enable: 'True'
      id: '68'
      name: If
      StepText: If [ Get ( SystemPlatform ) = -2  /* Windows */ ]
      Calculation: Get ( SystemPlatform ) = -2  /* Windows */
      DisplayCalculation:
        Chunk:
        - Get
        - ' ( '
        - SystemPlatform
        - ' ) = -2  /* Windows */'
    - enable: 'True'
      id: '68'
      name: If
      StepText: |-
        If [ /* not a network path */

        Left ( $path ; 2 ) ≠ "//" ]
      Calculation: |-
        /* not a network path */

        Left ( $path ; 2 ) ≠ "//"
      DisplayCalculation:
        Chunk:
        - |+
          /* not a network path */

        - Left
        - ' ( $path ; 2 ) ≠ "//"'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '# remove leading forward slash'
      Text: ' remove leading forward slash'
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $path; Value:Right ( $path ; Length ( $path ) - 1 )
        ]
      Value:
        Calculation: Right ( $path ; Length ( $path ) - 1 )
        DisplayCalculation:
          Chunk:
          - Right
          - ' ( $path ; '
          - Length
          - ' ( $path ) - 1 )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $path
    - enable: 'True'
      id: '70'
      name: End If
      StepText: End If
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '# use backslash path separator'
      Text: ' use backslash path separator'
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $path; Value:Substitute ( $path ; "/" ; "\\" ) ]
      Value:
        Calculation: Substitute ( $path ; "/" ; "\\" )
        DisplayCalculation:
          Chunk:
          - Substitute
          - ' ( $path ; "/" ; "\\" )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $path
    - enable: 'True'
      id: '70'
      name: End If
      StepText: End If
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '103'
      name: Exit Script
      StepText: 'Exit Script [ Result: $path ]'
      Calculation: $path
      DisplayCalculation:
        Chunk: $path
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
