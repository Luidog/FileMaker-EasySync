#Sync Check:Sends a list of all ES_Record_UUIDs, from all synced tables, to the server. The server runs that list up against its own list of ES_Record_UUIDs, and returns the difference. This script takes the "diff" and deletes the records. This rounds out the delete support. It helps to ensure that the mobile device doesn't have any records locally that it shouldn't have.Please note: Records flagged as "do not sync" (via the ES_Exclude field) are not included in the UUID list sent to the server. Therefore, they will not be deleted if they are not on the server.History:2014-05-01		Tim Dietrich (timdietrich@me.com)	Initial version.	2014-05-15	Tim Dietrich (timdietrich@me.com)	Delimiting the underscore used in the query that gets ES_ tables.2014-06-02	Tim Dietrich (timdietrich@me.com)	Properly escapes the ES_ table names.	Supports passing additional info to server (via $$additional_sync_check_info).
#
If [ $$EASYSYNC.CLIENT.LOGLEVELTOWRITE ≥ 5 ]
Perform Script [ “EasySync Mobile: Config: Create Log Entry”; Parameter: Let ( [	~logLevel = 5 ;	~message = "start script"] ;	"$LogLevel = " & ~logLevel & " ;¶"	& "$logMessage = " & Quote ( ~message ) & " ;¶"	& "$ScriptName = " & Quote ( Get ( ScriptName ) ) & " ;¶"	& "$ScriptParameter = " & Quote ( Get ( ScriptParameter ) ) & " ;¶"	& "$TimeStamp = GetAsTimeStamp ( " & Quote ( GetAsTimestamp ( Get ( CurrentTimeUTCMilliseconds ) / 1000 ) ) & " ) ;¶") ]
End If
#
#
Allow User Abort [ Off ]
Set Error Capture [ On ]
#
#
#Refresh sync status.
Set Variable [ $$EasySync_Status; Value:"Preparing sync check..." ]
Refresh Object [ Object Name: "easysync_status" ]
#
#Get all of the tables that are to be synced.
Set Variable [ $sync_tables; Value:ExecuteSQL ( "SELECT TableName FROM FileMaker_Tables WHERE TableName LIKE 'ES\_%'"; "|"; ¶ ) ]
#
#Init the SELECT statement...
Set Variable [ $select; Value:"" ]
#
#Loop over the ES tables...
Set Variable [ $i; Value:1 ]
Loop
Set Variable [ $sync_table; Value:GetValue ( $sync_tables ; $i ) ]
Set Variable [ $select; Value:$select & If ( not IsEmpty ( $select ); " UNION ALL "; "" ) &"SELECT ES_Record_UUID FROM \\\"" & $sync_table & "\\\" WHERE COALESCE ( ES_Exclude, 0 ) = 0" ]
Set Variable [ $i; Value:$i + 1 ]
Exit Loop If [ $i > ValueCount ( $sync_tables ) ]
End Loop
#
#Create the ExecuteSQL call.
Set Variable [ $executesql; Value:"ExecuteSQL ( \"" & $select & "\"; \"\"; \"\")" ]
#
#Execute the SELECT statement.
Set Variable [ $UUIDs; Value:Evaluate ( $executesql ) ]
#
#If there are no UUIDs in the sync tables...
If [ IsEmpty ( $UUIDs ) ]
Exit Script [  ]
End If
#
#Refresh sync status.
Set Variable [ $$EasySync_Status; Value:"Performing sync check with server..." ]
Refresh Window
#
#Send list to Server for analysis. Server will return the diff.
Perform Script [ “Config: Sync Check”; Parameter: $$additional_sync_check_info & ¶ & $UUIDs ]
Set Variable [ $error; Value:Get ( LastError ) ]
Close File [ “Hosted_Database” ]
#
#If there was an error...
If [ $error ]
Show Custom Dialog [ Title: "Sync Check Error"; Message: "The sync check's call to the server has failed."; Default Button: “OK”, Commit: “Yes” ]
Exit Script [  ]
End If
#
#Get the DIFF list.
Set Variable [ $diff; Value:Get ( ScriptResult ) ]
#
#If there are records to be deleted...
If [ not IsEmpty ( $diff ) ]
#
Set Variable [ $$EasySync_Status; Value:"Removing " & ValueCount ( $diff ) & "records that are no longer on the server..." ]
Refresh Window
#
#Refresh sync status.
Set Variable [ $$EasySync_Status; Value:"Processing UUID diff..." ]
Refresh Window
#
#It sure would be nice to have "DELETE" support in ExecuteSQL right about now. ;-)
#
#Get a list of the layouts.
Set Variable [ $layouts; Value:LayoutNames ( Get ( FileName ) ) ]
#
#Loop over ES layouts to process diff deletions...
Set Variable [ $l; Value:1 ]
Loop
#
#Get the next layout.
Set Variable [ $layout; Value:GetValue ( $layouts ; $l ) ]
#
#If this is a layout based on a sync table ("ES_")...
If [ Left ( $layout; 3 ) = "ES_" ]
#
#Go to the layout.
Go to Layout [ GetValue ( $layouts ; $l ) ]
#
#Find records in the diff list...
Enter Find Mode [  ]
Set Variable [ $d; Value:1 ]
Loop
#
Set Field By Name [ Get ( LayoutTableName ) & "::ES_Record_UUID"; GetValue ( $diff ; $d ) ]
#
Set Variable [ $d; Value:$d + 1 ]
Exit Loop If [ $d > ValueCount ( $diff ) ]
New Record/Request
#
End Loop
Perform Find [  ]
#
#Delete the records.
If [ Get ( FoundCount ) ]
Delete All Records[ No dialog ]
End If
#
End If
#
Set Variable [ $l; Value:$l + 1 ]
Exit Loop If [ $l > ValueCount ( $layouts ) ]
#
End Loop
#End "Loop over ES layouts to process diff deletions..."
#
Go to Layout [ "EasySync_Payloads" ]
#
End If
#


---
Script:
  includeInMenu: 'False'
  runFullAccess: 'False'
  id: '45'
  name: Sync Check
  StepList:
    Step:
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: "#Sync Check:\nSends a list of all ES_Record_UUIDs, from all synced
        tables, to the server. The server runs that list up against its own list of
        ES_Record_UUIDs, and returns the difference. This script takes the \"diff\"
        and deletes the records. This rounds out the delete support. It helps to ensure
        that the mobile device doesn't have any records locally that it shouldn't
        have.\n\nPlease note: Records flagged as \"do not sync\" (via the ES_Exclude
        field) are not included in the UUID list sent to the server. Therefore, they
        will not be deleted if they are not on the server.\n\nHistory:\n\n2014-05-01\t\n\tTim
        Dietrich (timdietrich@me.com)\n\tInitial version.\n\t\n2014-05-15\n\tTim Dietrich
        (timdietrich@me.com)\n\tDelimiting the underscore used in the query that gets
        ES_ tables.\n\n2014-06-02\n\tTim Dietrich (timdietrich@me.com)\n\tProperly
        escapes the ES_ table names.\n\tSupports passing additional info to server
        (via $$additional_sync_check_info)."
      Text: "Sync Check:\nSends a list of all ES_Record_UUIDs, from all synced tables,
        to the server. The server runs that list up against its own list of ES_Record_UUIDs,
        and returns the difference. This script takes the \"diff\" and deletes the
        records. This rounds out the delete support. It helps to ensure that the mobile
        device doesn't have any records locally that it shouldn't have.\n\nPlease
        note: Records flagged as \"do not sync\" (via the ES_Exclude field) are not
        included in the UUID list sent to the server. Therefore, they will not be
        deleted if they are not on the server.\n\nHistory:\n\n2014-05-01\t\n\tTim
        Dietrich (timdietrich@me.com)\n\tInitial version.\n\t\n2014-05-15\n\tTim Dietrich
        (timdietrich@me.com)\n\tDelimiting the underscore used in the query that gets
        ES_ tables.\n\n2014-06-02\n\tTim Dietrich (timdietrich@me.com)\n\tProperly
        escapes the ES_ table names.\n\tSupports passing additional info to server
        (via $$additional_sync_check_info)."
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '68'
      name: If
      StepText: If [ $$EASYSYNC.CLIENT.LOGLEVELTOWRITE ≥ 5 ]
      Calculation: $$EASYSYNC.CLIENT.LOGLEVELTOWRITE ≥ 5
      DisplayCalculation:
        Chunk: $$EASYSYNC.CLIENT.LOGLEVELTOWRITE ≥ 5
    - enable: 'True'
      id: '1'
      name: Perform Script
      StepText: "Perform Script [ “EasySync Mobile: Config: Create Log Entry”; Parameter:
        Let ( [\n\t~logLevel = 5 ;\n\t~message = \"start script\"\n] ;\n\t\"$LogLevel
        = \" & ~logLevel & \" ;¶\"\n\t& \"$logMessage = \" & Quote ( ~message ) &
        \" ;¶\"\n\t& \"$ScriptName = \" & Quote ( Get ( ScriptName ) ) & \" ;¶\"\n\t&
        \"$ScriptParameter = \" & Quote ( Get ( ScriptParameter ) ) & \" ;¶\"\n\t&
        \"$TimeStamp = GetAsTimeStamp ( \" & Quote ( GetAsTimestamp ( Get ( CurrentTimeUTCMilliseconds
        ) / 1000 ) ) & \" ) ;¶\"\n) ]"
      Calculation: "Let ( [\n\t~logLevel = 5 ;\n\t~message = \"start script\"\n] ;\n\t\"$LogLevel
        = \" & ~logLevel & \" ;¶\"\n\t& \"$logMessage = \" & Quote ( ~message ) &
        \" ;¶\"\n\t& \"$ScriptName = \" & Quote ( Get ( ScriptName ) ) & \" ;¶\"\n\t&
        \"$ScriptParameter = \" & Quote ( Get ( ScriptParameter ) ) & \" ;¶\"\n\t&
        \"$TimeStamp = GetAsTimeStamp ( \" & Quote ( GetAsTimestamp ( Get ( CurrentTimeUTCMilliseconds
        ) / 1000 ) ) & \" ) ;¶\"\n)"
      DisplayCalculation:
        Chunk:
        - Let
        - " ( [\n\t~logLevel = 5 ;\n\t~message = \"start script\"\n] ;\n\t\"$LogLevel
          = \" & ~logLevel & \" ;¶\"\n\t& \"$logMessage = \" & "
        - Quote
        - " ( ~message ) & \" ;¶\"\n\t& \"$ScriptName = \" & "
        - Quote
        - ' ( '
        - Get
        - ' ( '
        - ScriptName
        - " ) ) & \" ;¶\"\n\t& \"$ScriptParameter = \" & "
        - Quote
        - ' ( '
        - Get
        - ' ( '
        - ScriptParameter
        - " ) ) & \" ;¶\"\n\t& \"$TimeStamp = GetAsTimeStamp ( \" & "
        - Quote
        - ' ( '
        - GetAsTimestamp
        - ' ( '
        - Get
        - ' ( '
        - CurrentTimeUTCMilliseconds
        - |2-
           ) / 1000 ) ) & " ) ;¶"
          )
      Script:
        id: '66'
        name: 'EasySync Mobile: Config: Create Log Entry'
    - enable: 'True'
      id: '70'
      name: End If
      StepText: End If
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '85'
      name: Allow User Abort
      StepText: Allow User Abort [ Off ]
      Set:
        state: 'False'
    - enable: 'True'
      id: '86'
      name: Set Error Capture
      StepText: Set Error Capture [ On ]
      Set:
        state: 'True'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Refresh sync status.'
      Text: Refresh sync status.
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $$EasySync_Status; Value:"Preparing sync check..."
        ]
      Value:
        Calculation: '"Preparing sync check..."'
        DisplayCalculation:
          Chunk: '"Preparing sync check..."'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $$EasySync_Status
    - enable: 'True'
      id: '167'
      name: Refresh Object
      StepText: 'Refresh Object [ Object Name: "easysync_status" ]'
      ObjectName:
        Calculation: '"easysync_status"'
        DisplayCalculation:
          Chunk: '"easysync_status"'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Get all of the tables that are to be synced.'
      Text: Get all of the tables that are to be synced.
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $sync_tables; Value:ExecuteSQL ( "SELECT TableName
        FROM FileMaker_Tables WHERE TableName LIKE 'ES\_%'"; "|"; ¶ ) ]
      Value:
        Calculation: ExecuteSQL ( "SELECT TableName FROM FileMaker_Tables WHERE TableName
          LIKE 'ES\_%'"; "|"; ¶ )
        DisplayCalculation:
          Chunk:
          - ExecuteSQL
          - ' ( "SELECT TableName FROM FileMaker_Tables WHERE TableName LIKE ''ES\_%''";
            "|"; ¶ )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $sync_tables
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Init the SELECT statement...'
      Text: Init the SELECT statement...
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $select; Value:"" ]
      Value:
        Calculation: '""'
        DisplayCalculation:
          Chunk: '""'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $select
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Loop over the ES tables...'
      Text: Loop over the ES tables...
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $i; Value:1 ]
      Value:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $i
    - enable: 'True'
      id: '71'
      name: Loop
      StepText: Loop
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $sync_table; Value:GetValue ( $sync_tables ; $i ) ]
      Value:
        Calculation: GetValue ( $sync_tables ; $i )
        DisplayCalculation:
          Chunk:
          - GetValue
          - ' ( $sync_tables ; $i )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $sync_table
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: |-
        Set Variable [ $select; Value:$select & If ( not IsEmpty ( $select ); " UNION ALL "; "" ) &
        "SELECT ES_Record_UUID FROM \\\"" & $sync_table & "\\\" WHERE COALESCE ( ES_Exclude, 0 ) = 0" ]
      Value:
        Calculation: |-
          $select & If ( not IsEmpty ( $select ); " UNION ALL "; "" ) &
          "SELECT ES_Record_UUID FROM \\\"" & $sync_table & "\\\" WHERE COALESCE ( ES_Exclude, 0 ) = 0"
        DisplayCalculation:
          Chunk:
          - '$select & '
          - If
          - ' ( '
          - not
          - type: NoRef
            __content__: ' '
          - IsEmpty
          - |2-
             ( $select ); " UNION ALL "; "" ) &
            "SELECT ES_Record_UUID FROM \\\"" & $sync_table & "\\\" WHERE COALESCE ( ES_Exclude, 0 ) = 0"
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $select
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $i; Value:$i + 1 ]
      Value:
        Calculation: $i + 1
        DisplayCalculation:
          Chunk: $i + 1
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $i
    - enable: 'True'
      id: '72'
      name: Exit Loop If
      StepText: Exit Loop If [ $i > ValueCount ( $sync_tables ) ]
      Calculation: $i > ValueCount ( $sync_tables )
      DisplayCalculation:
        Chunk:
        - '$i > '
        - ValueCount
        - ' ( $sync_tables )'
    - enable: 'True'
      id: '73'
      name: End Loop
      StepText: End Loop
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Create the ExecuteSQL call.'
      Text: Create the ExecuteSQL call.
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $executesql; Value:"ExecuteSQL ( \"" & $select & "\";
        \"\"; \"\")" ]
      Value:
        Calculation: '"ExecuteSQL ( \"" & $select & "\"; \"\"; \"\")"'
        DisplayCalculation:
          Chunk: '"ExecuteSQL ( \"" & $select & "\"; \"\"; \"\")"'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $executesql
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Execute the SELECT statement.'
      Text: Execute the SELECT statement.
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $UUIDs; Value:Evaluate ( $executesql ) ]
      Value:
        Calculation: Evaluate ( $executesql )
        DisplayCalculation:
          Chunk:
          - Evaluate
          - ' ( $executesql )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $UUIDs
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#If there are no UUIDs in the sync tables...'
      Text: If there are no UUIDs in the sync tables...
    - enable: 'True'
      id: '68'
      name: If
      StepText: If [ IsEmpty ( $UUIDs ) ]
      Calculation: IsEmpty ( $UUIDs )
      DisplayCalculation:
        Chunk:
        - IsEmpty
        - ' ( $UUIDs )'
    - enable: 'True'
      id: '103'
      name: Exit Script
      StepText: Exit Script [  ]
    - enable: 'True'
      id: '70'
      name: End If
      StepText: End If
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Refresh sync status.'
      Text: Refresh sync status.
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $$EasySync_Status; Value:"Performing sync check with
        server..." ]
      Value:
        Calculation: '"Performing sync check with server..."'
        DisplayCalculation:
          Chunk: '"Performing sync check with server..."'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $$EasySync_Status
    - enable: 'True'
      id: '80'
      name: Refresh Window
      StepText: Refresh Window
      Option:
        state: 'False'
      FlushSQLData:
        state: 'False'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Send list to Server for analysis. Server will return the diff.'
      Text: Send list to Server for analysis. Server will return the diff.
    - enable: 'True'
      id: '1'
      name: Perform Script
      StepText: 'Perform Script [ “Config: Sync Check”; Parameter: $$additional_sync_check_info
        & ¶ & $UUIDs ]'
      Calculation: $$additional_sync_check_info & ¶ & $UUIDs
      DisplayCalculation:
        Chunk: $$additional_sync_check_info & ¶ & $UUIDs
      Script:
        id: '58'
        name: 'Config: Sync Check'
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $error; Value:Get ( LastError ) ]
      Value:
        Calculation: Get ( LastError )
        DisplayCalculation:
          Chunk:
          - Get
          - ' ( '
          - LastError
          - ' )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $error
    - enable: 'True'
      id: '34'
      name: Close File
      StepText: Close File [ “Hosted_Database” ]
      FileReference:
        id: '1'
        name: Hosted_Database
        UniversalPathList: |-
          fmnet:/your-server-address/FM_Surveys_Hosted
          file:FM_Surveys_Hosted
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#If there was an error...'
      Text: If there was an error...
    - enable: 'True'
      id: '68'
      name: If
      StepText: If [ $error ]
      Calculation: $error
      DisplayCalculation:
        Chunk: $error
    - enable: 'True'
      id: '87'
      name: Show Custom Dialog
      StepText: 'Show Custom Dialog [ Title: "Sync Check Error"; Message: "The sync
        check''s call to the server has failed."; Default Button: “OK”, Commit: “Yes”
        ]'
      Title:
        Calculation: '"Sync Check Error"'
        DisplayCalculation:
          Chunk: '"Sync Check Error"'
      Message:
        Calculation: '"The sync check''s call to the server has failed."'
        DisplayCalculation:
          Chunk: '"The sync check''s call to the server has failed."'
      Buttons:
        Button:
        - CommitState: 'True'
          Calculation: '"OK"'
          DisplayCalculation:
            Chunk: '"OK"'
        - CommitState: 'False'
        - CommitState: 'False'
    - enable: 'True'
      id: '103'
      name: Exit Script
      StepText: Exit Script [  ]
    - enable: 'True'
      id: '70'
      name: End If
      StepText: End If
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Get the DIFF list.'
      Text: Get the DIFF list.
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $diff; Value:Get ( ScriptResult ) ]
      Value:
        Calculation: Get ( ScriptResult )
        DisplayCalculation:
          Chunk:
          - Get
          - ' ( '
          - ScriptResult
          - ' )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $diff
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#If there are records to be deleted...'
      Text: If there are records to be deleted...
    - enable: 'True'
      id: '68'
      name: If
      StepText: If [ not IsEmpty ( $diff ) ]
      Calculation: not IsEmpty ( $diff )
      DisplayCalculation:
        Chunk:
        - not
        - type: NoRef
          __content__: ' '
        - IsEmpty
        - ' ( $diff )'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $$EasySync_Status; Value:"Removing " & ValueCount (
        $diff ) & "records that are no longer on the server..." ]
      Value:
        Calculation: '"Removing " & ValueCount ( $diff ) & "records that are no longer
          on the server..."'
        DisplayCalculation:
          Chunk:
          - '"Removing " & '
          - ValueCount
          - ' ( $diff ) & "records that are no longer on the server..."'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $$EasySync_Status
    - enable: 'True'
      id: '80'
      name: Refresh Window
      StepText: Refresh Window
      Option:
        state: 'False'
      FlushSQLData:
        state: 'False'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Refresh sync status.'
      Text: Refresh sync status.
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $$EasySync_Status; Value:"Processing UUID diff..."
        ]
      Value:
        Calculation: '"Processing UUID diff..."'
        DisplayCalculation:
          Chunk: '"Processing UUID diff..."'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $$EasySync_Status
    - enable: 'True'
      id: '80'
      name: Refresh Window
      StepText: Refresh Window
      Option:
        state: 'False'
      FlushSQLData:
        state: 'False'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#It sure would be nice to have "DELETE" support in ExecuteSQL right
        about now. ;-)'
      Text: It sure would be nice to have "DELETE" support in ExecuteSQL right about
        now. ;-)
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Get a list of the layouts.'
      Text: Get a list of the layouts.
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $layouts; Value:LayoutNames ( Get ( FileName ) ) ]
      Value:
        Calculation: LayoutNames ( Get ( FileName ) )
        DisplayCalculation:
          Chunk:
          - LayoutNames
          - ' ( '
          - Get
          - ' ( '
          - FileName
          - ' ) )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $layouts
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Loop over ES layouts to process diff deletions...'
      Text: Loop over ES layouts to process diff deletions...
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $l; Value:1 ]
      Value:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $l
    - enable: 'True'
      id: '71'
      name: Loop
      StepText: Loop
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Get the next layout.'
      Text: Get the next layout.
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $layout; Value:GetValue ( $layouts ; $l ) ]
      Value:
        Calculation: GetValue ( $layouts ; $l )
        DisplayCalculation:
          Chunk:
          - GetValue
          - ' ( $layouts ; $l )'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $layout
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#If this is a layout based on a sync table ("ES_")...'
      Text: If this is a layout based on a sync table ("ES_")...
    - enable: 'True'
      id: '68'
      name: If
      StepText: If [ Left ( $layout; 3 ) = "ES_" ]
      Calculation: Left ( $layout; 3 ) = "ES_"
      DisplayCalculation:
        Chunk:
        - Left
        - ' ( $layout; 3 ) = "ES_"'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Go to the layout.'
      Text: Go to the layout.
    - enable: 'True'
      id: '6'
      name: Go to Layout
      StepText: Go to Layout [ GetValue ( $layouts ; $l ) ]
      LayoutDestination:
        value: LayoutNameByCalc
      Layout:
        id: '0'
        name: ''
        Calculation: GetValue ( $layouts ; $l )
        DisplayCalculation:
          Chunk:
          - GetValue
          - ' ( $layouts ; $l )'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Find records in the diff list...'
      Text: Find records in the diff list...
    - enable: 'True'
      id: '22'
      name: Enter Find Mode
      StepText: Enter Find Mode [  ]
      Pause:
        state: 'False'
      Restore:
        state: 'False'
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $d; Value:1 ]
      Value:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $d
    - enable: 'True'
      id: '71'
      name: Loop
      StepText: Loop
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '147'
      name: Set Field By Name
      StepText: Set Field By Name [ Get ( LayoutTableName ) & "::ES_Record_UUID";
        GetValue ( $diff ; $d ) ]
      Result:
        Calculation: GetValue ( $diff ; $d )
        DisplayCalculation:
          Chunk:
          - GetValue
          - ' ( $diff ; $d )'
      TargetName:
        Calculation: Get ( LayoutTableName ) & "::ES_Record_UUID"
        DisplayCalculation:
          Chunk:
          - Get
          - ' ( '
          - LayoutTableName
          - ' ) & "::ES_Record_UUID"'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $d; Value:$d + 1 ]
      Value:
        Calculation: $d + 1
        DisplayCalculation:
          Chunk: $d + 1
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $d
    - enable: 'True'
      id: '72'
      name: Exit Loop If
      StepText: Exit Loop If [ $d > ValueCount ( $diff ) ]
      Calculation: $d > ValueCount ( $diff )
      DisplayCalculation:
        Chunk:
        - '$d > '
        - ValueCount
        - ' ( $diff )'
    - enable: 'True'
      id: '7'
      name: New Record/Request
      StepText: New Record/Request
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '73'
      name: End Loop
      StepText: End Loop
    - enable: 'True'
      id: '28'
      name: Perform Find
      StepText: Perform Find [  ]
      Restore:
        state: 'False'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#Delete the records.'
      Text: Delete the records.
    - enable: 'True'
      id: '68'
      name: If
      StepText: If [ Get ( FoundCount ) ]
      Calculation: Get ( FoundCount )
      DisplayCalculation:
        Chunk:
        - Get
        - ' ( '
        - FoundCount
        - ' )'
    - enable: 'True'
      id: '10'
      name: Delete All Records
      StepText: |-
        Delete All Records
        [ No dialog ]
      NoInteract:
        state: 'True'
    - enable: 'True'
      id: '70'
      name: End If
      StepText: End If
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '70'
      name: End If
      StepText: End If
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '141'
      name: Set Variable
      StepText: Set Variable [ $l; Value:$l + 1 ]
      Value:
        Calculation: $l + 1
        DisplayCalculation:
          Chunk: $l + 1
      Repetition:
        Calculation: '1'
        DisplayCalculation:
          Chunk: '1'
      Name: $l
    - enable: 'True'
      id: '72'
      name: Exit Loop If
      StepText: Exit Loop If [ $l > ValueCount ( $layouts ) ]
      Calculation: $l > ValueCount ( $layouts )
      DisplayCalculation:
        Chunk:
        - '$l > '
        - ValueCount
        - ' ( $layouts )'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '73'
      name: End Loop
      StepText: End Loop
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#End "Loop over ES layouts to process diff deletions..."'
      Text: End "Loop over ES layouts to process diff deletions..."
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '6'
      name: Go to Layout
      StepText: Go to Layout [ "EasySync_Payloads" ]
      LayoutDestination:
        value: LayoutNameByCalc
      Layout:
        Calculation: '"EasySync_Payloads"'
        DisplayCalculation:
          Chunk: '"EasySync_Payloads"'
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
    - enable: 'True'
      id: '70'
      name: End If
      StepText: End If
    - enable: 'True'
      id: '89'
      name: Comment
      StepText: '#'
